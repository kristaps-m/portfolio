import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import * as React from "react";
import Stack from "@mui/material/Stack";
import Button from "@mui/material/Button";
import ProjectCard from "../src/components/ProjectCard";
import { getContributions } from "../src/lib/github/index";
//import {getContributions2} from '../src/lib/github/index2';
import { NextPage } from "next";
import GitHubCalendar from "react-github-calendar";
import { Box, Container, Grid, Paper, styled} from "@mui/material";
import SeeMorePage from "../src/components/SeeMorePage";
// import projectId from './[projectId]'

export async function getServerSideProps() {
  let data = await getContributions("kristaps-m");
  //const data2 = await getContributions2('kristaps-m', "ycombinator-data-scraper");
  //console.log(data);
  //console.log(data2);
  // console.log(data, "This is data");
  // const nodesList = data.data.user.repositories.nodes;

  return {
    props: {
      username: data.data.user.name,
      totalContributions:
        data.data.user.contributionsCollection.contributionCalendar
          .totalContributions,
      avatarUrl: data.data.user.avatarUrl,
      theRepoName: data.data.user.repositories.nodes,
      getTheThingWeNeed: data.data.user.repositories.nodes,
      listOfProgramLangs: data.data.user.repositories,
      //testData2: data2.data.repository.object.entries
    }, // will be passed to the page component as props
  };
}

interface Props {
  username: string;
  totalContributions: number;
  avatarUrl: string;
  theRepoName: any[];
  getTheThingWeNeed: any[];
  listOfProgramLangs: any[];
  //testData2: any[]
}

let theUrl =
  "https://raw.githubusercontent.com/kristaps-m/ycombinator-data-scraper/master/portfolio.yml";
let theUrl2 =
  "https://raw.githubusercontent.com/kristaps-m/Python/master/portfolio.yml";

const testAddEmptyProject = {
  ymlText: "EMPTY",
  smallPicUrl: "https://picsum.photos/200/200",
  projectName: "EMPTY",
  progLangs: [{ node: { name: "Python" } }],
};

const Item = styled(Paper)(({ theme }) => ({
  backgroundColor: theme.palette.mode === "dark" ? "#1A2027" : "#fff",
  ...theme.typography.body2,
  padding: theme.spacing(1),
  textAlign: "center",
  color: theme.palette.text.secondary,
}));

const Home: NextPage<Props> = (props) => {

  // The ultimate filter:
  let theListOfTexts: any = [];

  for (let index = 0; index < props.getTheThingWeNeed.length; index++) {
    if (props.getTheThingWeNeed[index].object.entries.length > 0) {
      //console.log(props.getTheThingWeNeed[index], "\n NODES thig we need");
      let test = props.getTheThingWeNeed[index].object.entries;
      let oneRepoObject = {
        repoName: "",
        ymlText: "",
        smallPicUrl: "",
        progLangs: [],
      };
      oneRepoObject["repoName"] = props.getTheThingWeNeed[index].name;
      oneRepoObject[
        "smallPicUrl"
      ] = `https://raw.githubusercontent.com/kristaps-m/${oneRepoObject["repoName"]}/master/portfolio/image-small.png`;
      oneRepoObject["progLangs"] =
        props.getTheThingWeNeed[index].languages.edges;

      for (let j = 0; j < test.length; j++) {
        if (test[j].name === "portfolio.yml") {
          oneRepoObject["ymlText"] = test[j].object.text;

          //console.log(oneRepoObject)
          theListOfTexts.push(oneRepoObject); // test[j].object.text
        }
      }
    }
  }

  // https://raw.githubusercontent.com/kristaps-m/ycombinator-data-scraper/master/portfolio.yml

  const smallP_L =
    "https://raw.githubusercontent.com/kristaps-m/ycombinator-data-scraper/master/portfolio/image-small.png";

  const listLen = theListOfTexts.length - 2;

  for (let index = 0; index < listLen; index++) {
    theListOfTexts.push(theListOfTexts[index]);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Box sx={{ width: "100%" }}>
          <Grid
            container
            rowSpacing={1}
            columnSpacing={{ xs: 1, sm: 2, md: 3 }}
          >
            <Grid item xs={4}>
              <Item className={styles.title}>{props.username} </Item>
            </Grid>
            <Grid item xs={6}>
              <Item className={styles.description}>
                Total Contributions: {props.totalContributions}
              </Item>
            </Grid>
            <Grid item xs={4}>
              <Item>
                <img src={props.avatarUrl} alt="Avatar Image :)" width={200} />
              </Item>
            </Grid>
            <Grid item xs={6}>
              <Item>
                <div style={{ backgroundColor: "lightgray" }}>
                  <p style={{ color: "darkblue" }}></p>
                  <GitHubCalendar username="kristaps-m" />
                </div>
              </Item>
            </Grid>
          </Grid>
        </Box>

        {/* <br/>
      <div style={{backgroundColor: 'lightgray'}}>
        <h1>This is LEGIT activity #2</h1>    
        <p style={{color: 'darkblue'}}><a href="https://www.npmjs.com/package/react-github-graph">https://www.npmjs.com/package/react-github-graph</a></p>  
        <GithubContributions username="{kristaps-m}" />
      </div> */}
        {/* ------------------------CARD---------------------  */}
        <br></br>
        <Container>
          <Grid container>
            {theListOfTexts.map(
              (item: {
                progLangs: object[];
                ymlText: string;
                smallPicUrl: string;
                repoName: string;
              }) => (
                <Grid key={item.ymlText} xs={6} md={6} lg={4}>
                  <ProjectCard
                    textFromYaml={item.ymlText}
                    smallPictureLink={item.smallPicUrl}
                    projectName={item.repoName}
                    listOfProgramLangs={item.progLangs}
                  ></ProjectCard>
                </Grid>
              )
            )}
            <SeeMorePage></SeeMorePage>
          </Grid>
        </Container>        
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
